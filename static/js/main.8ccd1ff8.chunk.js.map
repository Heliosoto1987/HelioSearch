{"version":3,"sources":["createContex/createContex.js","Reducer/UserReduce.js","components/navBars/NavBar.jsx","screens/LandingPage.jsx","firebase/firebase-config.js","screens/LoginScreen/LoginScreen.jsx","hooks/useForm.js","components/Cards.jsx","components/navBars/NavBarFilter.jsx","components/modal/FilterButtons.jsx","components/modal/FilterModal.jsx","screens/SearchyScreen.jsx","screens/CreateUsersScreen/CreateUsersScreen.jsx","router/AppRouter.js","App.jsx","index.js"],"names":["UserContext","createContext","userReduce","state","action","type","payload","NavBar","history","className","onClick","push","LandingPage","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","googleAuthProvider","auth","GoogleAuthProvider","LoginScreen","props","useContext","dispatch","initialState","useState","values","setValues","reset","target","name","value","useForm","email","password","formValues","handleInputChange","handleLogin","handleGoogleLogin","a","signInWithPopup","resp","user","displayName","uid","useEffect","length","src","alt","onSubmit","placeholder","autoComplete","onChange","Cards","founded","industry","website","size","href","NavBarFilter","isOpen","setIsOpen","FilterButtons","companiesFilters","setFilterValue","handleButtonFilter","e","preventDefault","map","i","Modal","setAppElement","FilterModal","onRequestClose","overlayClassName","closeTimeoutMS","SearchyScreen","companies","filterValue","filteredCompanies","reduce","acc","next","includes","setCompaniesFilters","createCards","filter","id","CreateUsersScreen","AppRouter","exact","path","component","to","valgo","App","useReducer","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ccd1ff8.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const UserContext = createContext({});\n","export const userReduce = (state, action) => {\n  switch (action.type) {\n    case 'signIn':\n      return action.payload\n    default:\n      return state;\n  }\n};\n","//vendor\nimport React from \"react\";\n\nexport const NavBar = ({history}) => {\n  return (\n    <div className=\"navbar\">\n       <button \n            onClick={()=> history.history.push('/login')}\n            className=\"btn\"> Login\n            </button>\n            <button \n            onClick={()=> history.history.push('/createuser')}\n            className=\"btn\"> \n            User register\n            </button>\n    </div>\n  );\n};\n","//vendor\nimport React from 'react'\n//components\nimport { NavBar } from '../components/navBars/NavBar'\n\nexport const LandingPage = (history) => {\n\n    return (\n        <div className=\"Landing\">\n            <NavBar history={history}/>\n        </div>\n    )\n} \n","import firebase from \"firebase/compat/app\";\nimport \"firebase/compat/firestore\";\nimport \"firebase/compat/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD6E_WLMzJkrtpsENRCfmRj8p-qonrWqO0\",\n  authDomain: \"heliosearchy.firebaseapp.com\",\n  projectId: \"heliosearchy\",\n  storageBucket: \"heliosearchy.appspot.com\",\n  messagingSenderId: \"42327985741\",\n  appId: \"1:42327985741:web:b81819d1a0b38e6ce45604\",\n  measurementId: \"G-PYQ0MR3J33\",\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nexport { db, googleAuthProvider, firebase };\n","//vendor\nimport React, { useContext, useEffect } from 'react';\n//hooks\nimport { useForm } from '../../hooks/useForm';\n//firebase\nimport {firebase, googleAuthProvider} from '../../firebase/firebase-config';\n//context\nimport { UserContext } from '../../createContex/createContex';\nexport const LoginScreen = (props) => {\n    const {state, dispatch} = useContext(UserContext)\n    const [ formValues, handleInputChange ] = useForm({\n        email: '',\n        password: '',\n    });\n\n\n    const handleLogin = () => {\n        \n    }\n\n    const handleGoogleLogin = async() => {\n      \n            const resp = await firebase.auth().signInWithPopup(googleAuthProvider)\n            const {user} = resp\n            const action = {\n                type: 'signIn',\n                payload: {\n                    name: user.displayName,\n                    email: user.email,\n                    uid: user.uid\n                }\n            }\n            return await dispatch(action)\n    }\n\n    useEffect(() => {\n        if (state.name?.length > 1) {\n            props.history.push('/searchy')\n        }\n      }, [state, props]);\n\n    const { email, password } = formValues;\n   \n    return (\n        <div className=\"loginscreen\">\n            <div className=\"loginscreen__img\">\n                <img src=\"/HelioSearch/assets/logo.png\" alt=\"Img Logo\"></img>\n            </div>\n            <h2 className=\"loginscreen__title\">Welcome</h2>\n            <h2 className=\"loginscreen__title\">Login with your email and password, or with your google account</h2>\n            <form \n            onSubmit={ handleLogin }\n            className=\"loginscreen__form\"\n            >\n                <label>Email</label>\n                <input\n                    type=\"text\"\n                    placeholder=\"email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={ email }\n                    onChange={ handleInputChange }\n                />\n                <label>Password</label>\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={ password }\n                    onChange={ handleInputChange }\n                />\n\n                {\n                <button\n                className=\"btn loginscreen__btn\"\n                type=\"submit\"\n                // disabled={ loading }\n                \n                >\n                    Login\n                </button>\n                }\n                \n                <div className=\"login__social-networks\">\n                    <p>Login with social networks</p>\n                        <div className=\"google-btn\"\n                        onClick={handleGoogleLogin}\n                        >\n                            <div \n                            className=\"google-icon-wrapper\"\n                            onClick={handleLogin}\n                            >\n                                <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                            </div>\n                            <p className=\"btn-text\">\n                                <b>Sign in with google</b>\n                            </p>\n                        </div>\n                </div>\n               \n            </form>\n    </div>\n    )\n}\n","import { useState } from \"react\";\n\nexport const useForm = (initialState = {}) => {\n  const [values, setValues] = useState(initialState);\n\n  const reset = (newState = initialState) => {\n    setValues(newState);\n  };\n\n  const handleInputChange = ({ target }) => {\n    setValues({\n      ...values,\n      [target.name]: target.value,\n    });\n  };\n\n  return [values, handleInputChange, reset];\n};\n","//vendor\nimport React from \"react\";\n\nexport const Cards = ({name, founded,\n  industry,\n  website,\n  size}) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card__name\">{name}</div>\n      <div className=\"card__founded\">{founded}</div>\n      <div className=\"card__main\">\n        <button className=\"card__main--industry\">{industry} </button>\n        <button className=\"card__main--size\">{size}</button>\n      </div>\n      <div className=\"card__footer\">\n        <a className=\"card__footer--btn\"\n          href={`https://${website}`}\n        >\n          {website}\n        </a>\n      </div>\n    </div>\n  );\n};\n","import React from 'react'\n\nexport const NavBarFilter = ({isOpen, setIsOpen}) => {\n    const handleInputFiler = () => {\n        setIsOpen(!isOpen)\n    }\n    return (\n        <nav className=\"navFilter\">\n            <button \n            className=\"navFilter__primarybtn\"\n            onClick={handleInputFiler}\n            >\n                Filter\n            </button>\n        </nav>\n    )\n}\n","//vendor\nimport React from 'react'\n\nexport const FilterButtons = ({companiesFilters, setFilterValue}) => {\n    const handleButtonFilter = (e) => {\n        e.preventDefault()\n        setFilterValue(e.target.value)\n    }\n    const handleResetFilter = (e) => {\n        e.preventDefault()\n        setFilterValue('')\n    }\n\n    return (\n        <>\n            <button className=\"filterbutton__reset\" onClick={handleResetFilter}>Clear filter</button>\n        {\n            companiesFilters.map((value, i) => (\n                <button \n                onClick={handleButtonFilter}\n                value={value}\n                className=\"filterbutton\" \n                key={i}\n                >{value}</button>\n            ))\n        }\n        </>\n    )}\n","//vendor\nimport React from 'react'\n//library modal\nimport Modal from 'react-modal';\n//components\nimport { FilterButtons } from './FilterButtons';\n//modal config\nModal.setAppElement('#root');\n\n\nexport const FilterModal = ({isOpen, setIsOpen, companiesFilters, setFilterValue}) => {\n    const closeModal = () =>{\n        setIsOpen(false)\n    }\n    return (\n        <Modal\n            isOpen={isOpen}\n            onRequestClose={closeModal}\n            className=\"modal\"\n            overlayClassName=\"modal__fondo\"\n            closeTimeoutMS={200}\n        >\n            <h1 className=\"modaltitle\"> Filter Companies </h1>\n            <hr />\n                <form >\n                  \n                    <FilterButtons\n                    setFilterValue={setFilterValue}\n                    companiesFilters={companiesFilters}\n                    />\n                </form>\n        </Modal>\n    )\n}\n","//vendor\nimport React, { useState } from 'react'\n//components\nimport { Cards } from '../components/Cards'\nimport { NavBarFilter } from '../components/navBars/NavBarFilter'\nimport { FilterModal } from '../components/modal/FilterModal'\n//companies\nimport companiesJson from '../companeis/companies.json'\n\nconst initialState = companiesJson\n\nexport const SearchyScreen = () => {\n    const [isOpen, setIsOpen] = useState(false)\n    const [companies] = useState(initialState)\n    const [filterValue, setFilterValue] = useState('')\n    const filteredCompanies = companies.reduce((acc, next) => {\n        const { industry } = next;\n        if (!!industry && !acc.includes(industry)) {\n          acc.push(industry);\n        };\n        return acc;\n      }, []);\n    const [companiesFilters, setCompaniesFilters] = useState(filteredCompanies)\n    const createCards = companies.filter(({ industry }) => !!industry && industry.includes(filterValue))\n    return (\n        <div className=\"searchyscreen\">\n            <NavBarFilter\n                setIsOpen={setIsOpen}\n                isOpen={isOpen}\n            />\n                <div className=\"searchyscreen__main\">\n                    {\n                        createCards.map(value => (\n                            <Cards      \n                            key={value?.id}\n                            name={value?.name}\n                            founded={value?.founded}\n                            industry={value?.industry}\n                            website={value?.website}\n                            size={value?.size}\n                            />\n                        ))\n                    }\n                </div>\n            <FilterModal\n                setFilterValue={setFilterValue}\n                isOpen={isOpen}\n                setIsOpen={setIsOpen}\n                filterValue={filterValue}\n                companiesFilters={companiesFilters}\n                setCompaniesFilters={setCompaniesFilters}\n            />\n        </div>\n    \n    )\n}\n","import React from 'react'\n\nexport const CreateUsersScreen = () => {\n    return (\n        <div className=\"createusuario\">\n            Soy Create usuario\n        </div>\n    )\n}\n","//vendor\nimport React from \"react\";\n//router\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n//screens\nimport { LandingPage } from \"../screens/LandingPage\";\nimport { LoginScreen } from \"../screens/LoginScreen/LoginScreen\";\nimport { SearchyScreen } from \"../screens/SearchyScreen\";\nimport { CreateUsersScreen } from \"../screens/CreateUsersScreen/CreateUsersScreen\";\n\nexport const AppRouter = () => {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={LandingPage} />\n          <Route exact path=\"/searchy\" component={SearchyScreen} />\n          <Route exact path=\"/login\" component={LoginScreen} />\n          <Route exact path=\"/createuser\" component={CreateUsersScreen} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","//vendor\nimport React, { useReducer } from 'react'\n//config context y reducer\nimport { UserContext } from './createContex/createContex'\nimport { userReduce } from './Reducer/UserReduce';\n//Router\nimport {AppRouter} from './router/AppRouter'\n//firebase\n\nconst initialState = [\n    { \n\n        id: 1,\n        valgo: \"mucho\",\n    }\n];\n\nexport const App = () => {\n    const [ state, dispatch ] = useReducer(userReduce, initialState )\n\n    return (\n        <div className=\"app__main\">\n            <UserContext.Provider value={{state, dispatch}}>\n            <AppRouter/>\n            </UserContext.Provider>\n        </div>\n    )\n}\n","//vendor\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n//App\nimport { App } from './App';\n//styles\nimport './styles/styles.scss'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}